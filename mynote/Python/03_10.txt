[13] 데이터 시각화
시각화 원본 데이터 또는 분석된 결과 데이터를 그래프로 표현하는 것

*matplotlib
:Python 2D 플로팅 라이브러리
>플랫폼에 독립적인 대화형 환경을 제공하며 고품질의 그림을 생성할 수 있게 해줌

ex)
import matplotlib as plt
%%matplotlib inline > notebook 을 실행한 브라우저에서 바로 그림을 볼 수 있게 해 줌
%config InlineBackend.figure_format = 'retina' > 그래프를 더 높은 해상도로 그려줌

-figure 객체: Matplotlib 에서 그래프를 그리기 위한 객체
>plt.pyplot.figure(num, figsize)
>plt.subplots 으로 분할해 각 부분에 그래프를 그리는 방식 으로 시각화 함
num: 숫자(ID) 지정, 없는 숫자일시 새로운 그림 생성
figsize: 너비와 높이 지정

-plt.pyplot.subplot(*argd, **kwargs)
:현재 figure 객체에 서브 플롯 추가
*argd,**kwargs: 위치를 설명
ncol, nrow,index: 행,열,위치
pos: 행 수, 열 수, 인덱스
>subplots() : 현재 figure 객체에 서브플롯 집합 추가

-pyplot 함수
plot(): 주어진 x, y 값을 선과 점으로 표시해줌

-pandas.DataFrame.plot()
: 판다스 데이터 프레임 객체를 이용하여 그래프 작성 가능
> 데이터 프레임의 데이터를 쉽게 시각화

-scatter(): 산점도 그래프를 그려줌
-bar() : 수직 막대그래프
-barh(): 수평 막대그래프
-axhline(): 수평선 그래프
-axvline(): 수직선 그래프
-hist(): 히스토그램
-boxplot(), biolinplot(): 구간별 데이터 분포 확인
-fill(), fill_between(): 그래프 내를 채움
*linestyle, linewidth 지정 가능
*text(), annotate(): 텍스트 추가
*축과 눈금 지정 가능 > Artist 클래스 상속
set(): 그래프의 제목과 축의 제목 , 눈금 , 눈금 레이블 등을 설정
set_xlim (), set_ylim: 각각 X 축과 Y 축의 범위를 설정
set_xlabel (), set_ylabel: X 축과 Y 축의 레이블을 설정
set_xticks (), set_yticks: 눈금 위치를 리스트 형식으로 지정
set_xticklabels (), set_yticklabels: 눈금의 레이블을 리스트 형식으로 지정
spines 속성: 그래프의 박스 경계를 설정
grid(True): 눈금선을 보여줌
plot.suptitle():  그래프의 제목을 설정
-축 공유
:하나의 그래프 영역에 두 개 이상의 그래프 를 그리면서 다른 축을 지정하고 싶을 경우 
> twinx (), twiny () 함수를 이용해서 새로운 축 객체를 생성하여 그래프를 그리고 축을 다르게 지정

>twinx 함수는 x 축을 공유,  y 축을 오른쪽에 표시해주는 새로운 축 객체를 반환
>twiny 함수는 y 축을 공유,  x 축을 위쪽에 표시해주는 새로운 축 객체를 반환
