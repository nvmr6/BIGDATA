3. operator
:일정한 규칙을 가지고 계산 

1) 산술 연산자
:기본적인 연산자 (+,-, *, /, %)
[% 연산자는 나머지를 구하는 연산자로 짝수, 홀수, 배수 판별용으로 쓰인다.]

2) 증감 연산자
:수의 증감을 적용하는 연산자(++, --)
ex) num++;, num--; :수의 증감을 다음 라인에서 수행한다.
     ++num;, --num; : 수의 증감을 즉시 수행한다.

3) 관계 연산자
:수의 동일 여부, 대소 비교를 판단하는 연산자 (<, >, <=, >=, ==, !=)
[boolean값을 결과로 활용한다.]

4) 논리 연산자
:boolean값 간의 계산에 쓰이는 연산자 (&&, ||, and, or)
ex) true && true = true, true && false = false, false && false = false
     true || true = true, true || false = true, false || false = false
:&&의 경우 false일 때는 우항을 실행하지 않으며, ||의 경우 true일 때 우항을 실행하지 않는다.

5) 삼항 연산자
:조건의 참거짓에 따라 좌항, 우항을 실행하는 연산자(()? A:B)
[조건이 참이면 좌항, 거짓이면 우항 실행]

6) 대입 연산자
:변수를 계산하고 같은 변수로 대입할 때 쓰는 연산자( =, +=, -=, *=, /=, %=)
ex) num+=1; > num = num + 1; num++;와 같다.

7) 비트 연산자
:수를 비트단위 (2분법)으로 논리 계산하는 연산자 (|, &)
ex) int n1 = 10, n2 = 5
n1 & n2 > 1010 & 0101 = 0000 > 0
n1 | n2 > 1010 | 0101 = 1111 > 15

4. Control
:조건문과 반복문으로 코드에 따라 상황을 부여한다.

1)조건문(if, switch)

ex) if (조건){
	명령문
}
else if(두번째 조건){
	명령문
}
else{
	위의 조건이 참이 아닌 경우 명령문

}

*scanner: 사용자로부터 입력을 받는다. 
Scanner sc = new Scanner(System.in);
int num1 = sc.nextInt();
sc.close();

ex) switch(변수){
case 값1:
	명령문1 break;
case 값2:
	명령문2 break;
default:
	위의 조건이 참이 아닌 경우 명령문
}