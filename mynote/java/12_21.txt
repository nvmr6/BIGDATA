19) Thread
:하나의 프로그램이 동시에 여러개의 일을 수행할 수 있도록 하는 것(멀티 스레드) 
>자원의 효율적 사용, 응답성 향상, 코드의 간결성
>동기화 주의, 교착상태 방지, 고려사항
>java.lang.Thread > implements Runnable or extends Thread

1. n개의 스레드, 1개의 객체 
public class ThreadEx implements Runnable{}
public class ExObject1ThreadN {
	public static void main(String[] args) {
		ThreadEx threadEx = new ThreadEx(); //객체 1개
		Thread threadA = new Thread(threadEx, "A");
		Thread threadB = new Thread(threadEx, "B"); //n개 스레드
		threadA.start();
		threadB.start();
	}
}
2. n개의 스레드, n개의 객체
public class ThreadEx01 implements Runnable{}
public class ThreadEx01testMain {
	public static void main(String[] args) {
		Runnable target01 = new ThreadEx01();//객체 1개
		Runnable target02 = new ThreadEx01();//객체 1개
		Thread threadA = new Thread(target01, "A");//n개 스레드
		Thread threadB = new Thread(target02, "B");//n개 스레드
		threadA.start();
		threadB.start();
	}
}

*Synchronize
:인스턴스 변수를 스레드에서 공유하여 서로 영향을 미친다. 이를 방지하기 위해 스레드의 작업이 끝날 때까지 기다리는 예약어
>한 정보에는 하나의 명령만 접근
private synchronized void out() {}
> 함수가 수행하는 동안에는 다른 명령이 접근하지 않는다.

20) GUI
:사용자가 편리하도록 그래픽 요소를 가미하여 사용하도록 만들어 놓은 것

-AWT 컴포넌트
Java.awt 패키지 : GUI 구축을 위한 클래스들의 모임
(1 )컴포넌트의 배치와 관련된 클래스 : BorderLayout, GridLayout, FlowLayout
(2) GUI 구성과 관련된 클래스 : Button, Label, Canvas, Checkbox, Choice, Scrollbar, List, Menu, TextComponent, TextArea, TextField, CheckboxGroup
(3) 그래픽 출력과 관련된 클래스 Color, Font, Rectable, Point, Graphics, Image
(4) 컨테이너 클래스 그외의 클래스 : Frame, Panel, Window, Container, FileDialog, Demension, Event
-명령어
(1) pack() : 컴포넌트의 사이즈를 컴파일러가 최소한의 사이즈로 정함. 
(2) setSize(가로크기, 세로크기) : 컴포넌트 사이즈를 정함
(3) setVisible(true) : 화면에 출력함.
(4) dispose() : 자원을 해제시킴

-Swing 컴포넌트
:AWT보다 진보된 기능, 복잡하고 화려한 기능

/*2020.12.21 작성자: 오준서*/