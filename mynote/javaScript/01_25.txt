[5] 함수
1.익명 함수
:이름이 없는 함수, 변수에 넣어 사
>var functionVar = function() { };

2.선언적 함수
:선언 후 사용, 함수 먼저 읽으며 재정의가 가능하다.
>function 함수명 ( ) {}

3, 4.매개변수와 리턴
:선언된 매개변수보다 많으면 무시, 적으면 undefined로 입력된다
ex)
function f(x, y) {
            var temp = 1;
            for (var i = 1; i <= y ; i++) {
                temp *= x;
            }
            return temp;
        }
        alert(f(10)); //undefined
        alert(f(10,2));

5. 가변 인자 함수
: 매개변수를 선언된 형태와 다르게 사용했을 때, 
매개변수를 모두 활용할 수 있는 함수. 매개변수의 개수가 변할 수 있는 함수
*arguments: 매개변수 배열 
ex)
function arrayFun() {
      if (arguments.length == 0) {
        // 매개변수가 없을 때 할 명령어들
        alert('매개변수 없이 호출했구만');
      } else if (arguments.length == 1) {
        // 매개변수가 1개일 때 할 명령어들
        alert('매개변수 하나 ' + arguments[0] + '입력');
      } else if (arguments.length >= 2) {
        // 매개변수가 2개 이상일 대 할 명령어들
        var output = '매개변수를 2개 이상 ';
        for (var idx = 0; idx < arguments.length; idx++) {
          output += arguments[idx] + '  ';
        }
        output += ' 입력';
        alert(output);
      }
    }

6. 내부함수
:함수 내부에 선언하는 함수
>충돌을 막기 위해 내부함수 사용하면 내부함수가 우선

7.자기 호출 함수
:다른 개발자에게 영향을 주지 않게 함수를 생성하자마자 호출
>(fuction(){ … })();

8.콜백함수
:매개변수에 넣어 전달된 함수를 콜백함수라 한다.
ex)
function callTenTimes(callback) {
            for (var i = 0; i < 10; i++) {
                document.write(i);
                callback();
            }
        }
        var callback = function () { document.write(' 함수호출<br>'); };
        callTenTimes(callback);

9, 10. 클로저 함수
:함수가 자료형이므로 매개변수로도 전달할 수 있지만 함수를 
리턴하는 함수도 만들 수 있다. 특정함수를 여러 번 수행하거나 이벤트 처리
ex)
function test(name) {
            var output = 'Hello' + name + '님';
            return function () {
                alert(output);
            }
        }
        test('홍길동')();

11.내부 함수
*타이머 함수
setTimeout(function, millisecond) ; 일정시간 후 함수를 한번 실행
ex)setTimeout(function () { alert('3초가 지났네요') }, 3000);
setInterval(function, millisecond) ; 일정시간마다 함수를 반복해서 실행
ex)var intervalID = setInterval(function () {document.write('<h4>' + new Date() + '</h4>'); }, 
clearTimeout(id) ; setTimeout 중지
clearInterval(id); setInterval 중지

*인코딩 / 디코딩 함수
encodeURIComponent(uriConponent) ; 대부부의 문자를 모두 인코딩
decodeURIComponent(encodedURI);   대부분의 문자를 모두 디코딩

*코드 실행 함수
eval(수식이나 자바스크립코드); 자바스크립 코드를 실행

*숫자 확인 함수
isFinite() ; number가 유한한 값인지 확인
isNaN() ; number가 NaN인지 확인

*숫자 변환 함수
Number(num);
ParseInt(num);




